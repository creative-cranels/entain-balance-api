stages:
  - build
  - dockerize

.dind: &dind
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY

build:
  stage: build
  <<: [*testing-staging-only, *dind]
  script:
    - export TAG="${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}"
    - docker pull $CI_REGISTRY_IMAGE/builder:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/builder:latest -f builder.Dockerfile 
      -t $CI_REGISTRY_IMAGE/builder:$TAG 
      -t $CI_REGISTRY_IMAGE/builder:latest .
    - docker push $CI_REGISTRY_IMAGE/builder:$TAG
    - docker push $CI_REGISTRY_IMAGE/builder:latest

dockerize:
  stage: dockerize
  <<: [*testing-staging-only, *dind]
  script:
    - export TAG="${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}"
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest 
      --build-arg BUILDER_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE/builder:$TAG 
      --build-arg WEB_PRIVATE_KEY="$WEB_PRIVATE_KEY"
      --build-arg GIT_DOMAIN=$CI_SERVER_HOST
      -t $CI_REGISTRY_IMAGE:$TAG 
      -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$TAG
    - docker push $CI_REGISTRY_IMAGE:latest
  needs: [
    "build",
  ]
